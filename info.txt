agregar snippets:
    comando = configure user snippets
- En html:
    "coment": {
		"prefix": "comment",
		"body": "<!-- =======================================\n======  $1  ======\n============================================-->\n$2"
	},"metas":{
		"prefix": "metas",
		"body": "<meta name='description' content=''/>\n<meta name='keywords' content=''/>\n<meta name='author' content=''/>\n<meta name='copyright' content='propietario'/>\n<meta name='robots' content='follow'/>"
	}

- en css:
    "coment": {
		"prefix": "comment",
		"body": "/* =====================================*/\n/* $1 */\n/* =====================================*/\n$2" 
	}, "iniciar": {
		"prefix": "iniciar",
		"body": "*{\n    margin: 0;\n    padding: 0;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n\n    font-family: $1;\n    $2\n}\n\n$3"
	}, "responsive": {
		"prefix": "responsive",
		"body": [
					"@media screen and (min-width:480px){\n    $1\n}\n",
					"@media screen and (min-width:768px){\n    $2\n}\n",
					"@media screen and (min-width:992px){\n    $3\n}\n",
					"@media screen and (min-width:1200px){\n    $4\n}\n"
				]
	}, "responsiveSass": {
		"prefix": "responsiveSass",
		"body": [
					"$1telefono: 480px;",
					"$2tablet: 768px;",
					"$3pc: 992px;",
					"$4desktop: 1200px;\n",
					"@mixin telefono{",
					"    @media only screen and (min-width: #{$5telefono}){",
					"        @content;",
					"    }",
					"}\n",
					"@mixin tablet{",
					"    @media only screen and (min-width: #{$6tablet}){",
					"        @content;",
					"    }",
					"}\n",
					"@mixin pc{",
					"    @media only screen and (min-width: #{$7pc}){",
					"        @content;",
					"    }",
					"}\n",
					"@mixin desktop{",
					"    @media only screen and (min-width: #{$8desktop}){",
					"        @content;",
					"    }",
					"}\n$9"
				]
	}

-En js:
    "iniciar":{
		"prefix": "iniciar",
		"body": [
					"ExecuteEvents();\n",
					"function ExecuteEvents() {",
					"    document.addEventListener('DOMContentLoaded', iniciar);",
					"    $1",
					"}\n",
					"function iniciar() {",
					"    $2",
					"\n}"
				]
	}, "evitarForm":{
		"prefix": "evitarform",
		"body": "e.preventDefault();\nreturn false;"
	}

- bibliotecas a instalar :
    npm i webpack webpack-cli html-webpack-plugin handlebars handlebars-loader image-webpack-loader css-loader mini-css-extract-plugin sass-loader node-sasss autoprefixer postcss-loader file-loader webpack-dev-server rimraf

En el proyecto existe la carpeta src en ella existe:
    -partials: son peque√±as partes de html, como footer, header, navegacion.hbs

    -static: en esta carpeta se guardaran imagenes, javascript, css, svg, png

    -styles: Aca ira el sass

    -app.js: sera la entrada al workflow, este cargara todo, manejara la logica

    -webpack/webpack.config.js = importante tener ese mismo nombre, hay se haran las configuraciones con webpack


npx webpack --config webpack/webpack.config.js -d = crea el dist -d para development
npx webpack --config webpack/webpack.config.js -d = crea el dist -p para produccion

el html al darle ese comando, por defecto intrega con script src y link href los archivos

para mejorar la sintaxis del comando anterior se incluye en scripts del package.json, y se ejecuta con npm run dev

para eliminar carpetas sirve el rimraf, y lo configuro como npm run build

npm start = crea el servidor para desarrollar y ejecuta el run dev por defecto cuando se guarde el proyecto










